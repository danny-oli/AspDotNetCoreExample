// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace JornalOnline.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JornalOnline.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<double?>("Preco")
                        .IsRequired();

                    b.Property<int?>("Quantidade")
                        .IsRequired();

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("JornalOnline.Models.Artigo", b =>
                {
                    b.Property<int>("IdArtigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientePessoaId");

                    b.Property<int?>("ColunistaAutorPessoaId");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<int>("Paginas");

                    b.Property<int?>("TemaIdTema");

                    b.Property<string>("Texto");

                    b.Property<string>("Titulo");

                    b.Property<int>("Valor");

                    b.HasKey("IdArtigo");

                    b.HasIndex("ClientePessoaId");

                    b.HasIndex("ColunistaAutorPessoaId");

                    b.HasIndex("TemaIdTema");

                    b.ToTable("Artigos");
                });

            modelBuilder.Entity("JornalOnline.Models.Contratacao", b =>
                {
                    b.Property<int>("idContratacao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtigoIdArtigo");

                    b.Property<DateTime>("DataHoraContratacao");

                    b.Property<double>("ValorContratacao");

                    b.Property<int?>("clienteContrataPessoaId");

                    b.HasKey("idContratacao");

                    b.HasIndex("ArtigoIdArtigo");

                    b.HasIndex("clienteContrataPessoaId");

                    b.ToTable("Contratacoes");
                });

            modelBuilder.Entity("JornalOnline.Models.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPf");

                    b.Property<string>("Cidade");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Endereco");

                    b.Property<string>("Estado");

                    b.Property<string>("Nome");

                    b.Property<string>("Password");

                    b.Property<int>("Telefone");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("JornalOnline.Models.Tema", b =>
                {
                    b.Property<int>("IdTema")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tema");

                    b.HasKey("IdTema");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("JornalOnline.Models.Cliente", b =>
                {
                    b.HasBaseType("JornalOnline.Models.Pessoa");

                    b.Property<int>("Saldo");

                    b.ToTable("Cliente");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("JornalOnline.Models.Colunista", b =>
                {
                    b.HasBaseType("JornalOnline.Models.Pessoa");

                    b.Property<int?>("ClientePessoaId");

                    b.Property<string>("Especializacao");

                    b.Property<int>("SaldoColunista");

                    b.HasIndex("ClientePessoaId");

                    b.ToTable("Colunista");

                    b.HasDiscriminator().HasValue("Colunista");
                });

            modelBuilder.Entity("JornalOnline.Models.Artigo", b =>
                {
                    b.HasOne("JornalOnline.Models.Cliente")
                        .WithMany("Artigos")
                        .HasForeignKey("ClientePessoaId");

                    b.HasOne("JornalOnline.Models.Colunista", "ColunistaAutor")
                        .WithMany()
                        .HasForeignKey("ColunistaAutorPessoaId");

                    b.HasOne("JornalOnline.Models.Tema", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaIdTema");
                });

            modelBuilder.Entity("JornalOnline.Models.Contratacao", b =>
                {
                    b.HasOne("JornalOnline.Models.Artigo", "Artigo")
                        .WithMany()
                        .HasForeignKey("ArtigoIdArtigo");

                    b.HasOne("JornalOnline.Models.Cliente", "clienteContrata")
                        .WithMany()
                        .HasForeignKey("clienteContrataPessoaId");
                });

            modelBuilder.Entity("JornalOnline.Models.Colunista", b =>
                {
                    b.HasOne("JornalOnline.Models.Cliente")
                        .WithMany("ColunistasContratados")
                        .HasForeignKey("ClientePessoaId");
                });
#pragma warning restore 612, 618
        }
    }
}
