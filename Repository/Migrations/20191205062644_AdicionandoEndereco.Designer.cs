// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191205062644_AdicionandoEndereco")]
    partial class AdicionandoEndereco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Artigo", b =>
                {
                    b.Property<int>("IdArtigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientePessoaId");

                    b.Property<int?>("ColunistaAutorPessoaId");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<int>("Paginas");

                    b.Property<int?>("TemaIdTema");

                    b.Property<string>("Texto");

                    b.Property<string>("Titulo");

                    b.Property<int>("Valor");

                    b.HasKey("IdArtigo");

                    b.HasIndex("ClientePessoaId");

                    b.HasIndex("ColunistaAutorPessoaId");

                    b.HasIndex("TemaIdTema");

                    b.ToTable("Artigos");
                });

            modelBuilder.Entity("Domain.Contratacao", b =>
                {
                    b.Property<int>("IdContratacao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtigoIdArtigo");

                    b.Property<int?>("ClienteContrataPessoaId");

                    b.Property<DateTime>("DataHoraContratacao");

                    b.Property<double>("ValorContratacao");

                    b.HasKey("IdContratacao");

                    b.HasIndex("ArtigoIdArtigo");

                    b.HasIndex("ClienteContrataPessoaId");

                    b.ToTable("Contratacoes");
                });

            modelBuilder.Entity("Domain.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Estado");

                    b.Property<string>("Logradouro");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPf");

                    b.Property<int>("Cep");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("Nome");

                    b.Property<string>("Password");

                    b.Property<string>("Tipo");

                    b.HasKey("PessoaId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("Domain.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<double?>("Preco")
                        .IsRequired();

                    b.Property<int?>("Quantidade")
                        .IsRequired();

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.Tema", b =>
                {
                    b.Property<int>("IdTema")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tema");

                    b.HasKey("IdTema");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("Domain.Cliente", b =>
                {
                    b.HasBaseType("Domain.Pessoa");

                    b.Property<int>("Saldo");

                    b.ToTable("Cliente");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("Domain.Colunista", b =>
                {
                    b.HasBaseType("Domain.Pessoa");

                    b.Property<int?>("ClientePessoaId");

                    b.Property<int>("SaldoColunista");

                    b.HasIndex("ClientePessoaId");

                    b.ToTable("Colunista");

                    b.HasDiscriminator().HasValue("Colunista");
                });

            modelBuilder.Entity("Domain.Artigo", b =>
                {
                    b.HasOne("Domain.Cliente")
                        .WithMany("Artigos")
                        .HasForeignKey("ClientePessoaId");

                    b.HasOne("Domain.Pessoa", "ColunistaAutor")
                        .WithMany()
                        .HasForeignKey("ColunistaAutorPessoaId");

                    b.HasOne("Domain.Tema", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaIdTema");
                });

            modelBuilder.Entity("Domain.Contratacao", b =>
                {
                    b.HasOne("Domain.Artigo", "Artigo")
                        .WithMany()
                        .HasForeignKey("ArtigoIdArtigo");

                    b.HasOne("Domain.Cliente", "ClienteContrata")
                        .WithMany()
                        .HasForeignKey("ClienteContrataPessoaId");
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.HasOne("Domain.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("Domain.Colunista", b =>
                {
                    b.HasOne("Domain.Cliente")
                        .WithMany("ColunistasContratados")
                        .HasForeignKey("ClientePessoaId");
                });
#pragma warning restore 612, 618
        }
    }
}
